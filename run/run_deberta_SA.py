# -*- coding: utf-8 -*-
"""deberta_sst_test_map.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ebxbpk3OEZ74za3pCEF5lLuyolykN4Xe
"""


from transformers import pipeline
from transformers import AutoModel, AutoTokenizer, AutoModelForSeq2SeqLM, AutoModelForSequenceClassification
import torch
import re
from tqdm import tqdm
import openpyxl
MODEL = AutoModelForSequenceClassification.from_pretrained("/mnt/deberta_SA")
tokenizer = AutoTokenizer.from_pretrained("/mnt/deberta_SA")
nlp = pipeline('text-classification', model=MODEL, tokenizer=tokenizer, device=0)

workbook = openpyxl.load_workbook('sst_test_map_deberta.xlsx')
sheet = workbook.active
with open('./sst_test_map_syn.txt', 'r') as file:
  lines = file.readlines()
  for line in tqdm(lines):
    if line.startswith('sent_id') or line.startswith('insert') or line == '\n':
      continue
    texts = line.split('|')
    for i in range(0, len(texts)):
      texts[i] = re.sub(r'\s+', ' ', texts[i]).strip()
    sentiments = []
    scores = []
    for text in texts:
      output_list = nlp('sentiment: ' + text)
      if output_list[0]['label'] == 'positive':
        sentiments.append(1)
        scores.append([1 - output_list[0]['score'], output_list[0]['score']])
      else:
        sentiments.append(0)
        scores.append([output_list[0]['score'], 1 - output_list[0]['score']])
    data = []
    for i in range(0, len(texts)):
      data.append(texts[i])
      data.append(sentiments[i])
      data.append(scores[i][0])
      data.append(scores[i][1])
    sheet.append(data)
workbook.save('sst_test_map_deberta.xlsx')
workbook.close()